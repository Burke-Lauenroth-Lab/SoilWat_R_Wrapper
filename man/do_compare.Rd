% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mathematical_Functions.R
\name{do_compare}
\alias{do_compare}
\title{Recursive comparisons which also works for nested lists}
\usage{
do_compare(x1, x2)
}
\arguments{
\item{x1}{A R object}

\item{x2}{A R object}
}
\value{
\itemize{
 \item If both \code{x1} and \code{x2} are lists, then \code{do_compare} is called
       recursively on mutually shared names if names exists and on each element
       otherwise, and the output is a list from the return value of each recursive call.
 \item Otherwise, the function \code{\link{all.equal}} is called. If the result is
       \code{TRUE}, then \code{NA} is returned. If the result is \code{FALSE}, then
       a list with three elements is returned with \describe{
   \item{eq}{the result of the call to \code{\link{all.equal}}}
   \item{x1}{The object \code{x1}}
   \item{x2}{The object \code{x2}}
 }}
}
\description{
Recursive comparisons which also works for nested lists
}
\examples{
 ## expected result: NA
 do_compare(1L, 1L)

 ## expected result: list(eq = "Mean relative difference: 1", x1 = 1, x2 = 2)
 do_compare(1, 2)

 do_compare(list(1, 2), list(1, 3))
 ## expected result: comparison for elements a and b return NA; comparison for
 ## element c shows a difference
 do_compare(list(a = 1, b = 2), list(b = 2, c = 0, a = 1))
}
\seealso{
\code{\link{all.equal}}
}
